alphabet = [
    'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o',
    'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'
]

from art import logo
print(logo)

#TODO-1: Create a function called 'encrypt' that takes the 'text' and 'shift' as inputs.

#TODO-1: Create a function called 'decrypt' that takes the 'text' and 'shift' as inputs.
    #TODO-2: Inside the 'encrypt' function, shift each letter of the 'text' forwards in the alphabet by the shift amount and print the encrypted text.
    #e.g.
    #plain_text = "hello"
    #shift = 5
    #cipher_text = "mjqqt"
    #print output: "The encoded text is mjqqt"

    ##HINT: How do you get the index of an item in a list:
    #https://stackoverflow.com/questions/176918/finding-the-index-of-an-item-in-a-list

    ##🐛Bug alert: What happens if you try to encode the word 'civilization'?🐛


#TODO-3: Call the encrypt function and pass in the user inputs. You should be able to test the code and encrypt a message.
def ceasar(start_text, shift_amount, cipher_direction):
  end_text = ""
  for letter in start_text:
    if letter in alphabet:
      position = alphabet.index(letter)
      if cipher_direction == "encode":
        new_position = position + shift_amount
        if new_position > 25:
          new_position = new_position - 26
        new_letter = alphabet[new_position]
        end_text += new_letter
      else:
        new_position = position - shift_amount
        if position < 0:
          new_position = position + 26
        new_letter = alphabet[new_position]
        end_text += new_letter
    else:
      end_text += letter
  print (f"The {cipher_direction}d text is {end_text}")


should_continue = True

while should_continue:
  direction = input("Type 'encode' to encrypt, type 'decode' to decrypt:\n")
  text = input("Type your message:\n").lower()
  shift = int(input("Type the shift:\n"))
  shift = shift % 26
  ceasar(start_text=text, shift_amount=shift, cipher_direction=direction)
  result = input("Type 'yes' if you want to go again. Otherwise type 'no'.\n")
  if result == "no":
    should_continue = False
    print("Goodbye")
